{
	"type": "common",
	"folder": "src/Components/Common/",
	"fileName": "CCTextField",
	"extension": ".tsx",
	"prefix": "",
	"surffix": "",
	"content": [
		"import * as React from 'react';",
		"\n",
		"\nclass CCTextField extends React.Component<ThisProps, ThisState> {",
		"\n\tpublic state = {",
		"\n\t\terrorMessage: '',",
		"\n\t\thasError: false,",
		"\n\t\tvalue: this.props.value",
		"\n\t};",
		"\n",
		"\n\tpublic render() {",
		"\n\t\treturn (",
		"\n\t\t\t<div className=\"form-group\">",
		"\n\t\t\t\t<label",
		"\n\t\t\t\t\thtmlFor={this.props.fieldName}",
		"\n\t\t\t\t\tclassName={",
		"\n\t\t\t\t\t\tthis.props.labelClassName ? this.props.labelClassName : 'mr-1'",
		"\n\t\t\t\t\t}",
		"\n\t\t\t\t>",
		"\n\t\t\t\t\t{this.props.label}",
		"\n\t\t\t\t</label>",
		"\n\t\t\t\t<input",
		"\n\t\t\t\t\ttype=\"\"",
		"\n\t\t\t\t\tid=\"\"",
		"\n\t\t\t\t\tclassName={",
		"\n\t\t\t\t\t\tthis.props.inputClassName",
		"\n\t\t\t\t\t\t\t? this.props.inputClassName",
		"\n\t\t\t\t\t\t\t: 'form-control'",
		"\n\t\t\t\t\t}",
		"\n\t\t\t\t\tplaceholder={",
		"\n\t\t\t\t\t\tthis.props.placeholder ? this.props.placeholder : 'Input here...'",
		"\n\t\t\t\t\t}",
		"\n\t\t\t\t\tvalue={this.state.value}",
		"\n\t\t\t\t\tonChange={this.onChange}",
		"\n\t\t\t\t/>",
		"\n\t\t\t\t<span",
		"\n\t\t\t\t\tid=\"\"",
		"\n\t\t\t\t\tclassName={this.props.errorMessageClassName}",
		"\n\t\t\t\t\tstyle={{ color: 'red' }}",
		"\n\t\t\t\t>",
		"\n\t\t\t\t\t{this.state.errorMessage}",
		"\n\t\t\t\t</span>",
		"\n\t\t\t</div>",
		"\n\t\t);",
		"\n\t}",
		"\n",
		"\n\tpublic componentWillReceiveProps(nextProps: ThisProps) {",
		"\n\t\tthis.setState({ value: nextProps.value });",
		"\n\t}",
		"\n",
		"\n\tpublic onChange = (event: any) => {",
		"\n\t\tconst name = this.props.fieldName;",
		"\n\t\tconst value = event.target.value;",
		"\n\t\tconst error = this.props.validate ? this.props.validate(value) : false;",
		"\n\t\tif (this.props.isRequired) {",
		"\n\t\t\tif (value) {",
		"\n\t\t\t\tthis.setState({ value, hasError: false, errorMessage: '' });",
		"\n\t\t\t} else {",
		"\n\t\t\t\tthis.setState({",
		"\n\t\t\t\t\terrorMessage: this.props.isRequiredErrorMessage,",
		"\n\t\t\t\t\thasError: true,",
		"\n\t\t\t\t\tvalue",
		"\n\t\t\t\t});",
		"\n\t\t\t}",
		"\n\t\t}",
		"\n",
		"\n\t\tif (error) {",
		"\n\t\t\tthis.setState({ value, hasError: true, errorMessage: error.toString() });",
		"\n\t\t}",
		"\n",
		"\n\t\tthis.props.onChange(name, value, error);",
		"\n\t};",
		"\n}",
		"\n",
		"\ninterface ThisProps {",
		"\n\tfieldName: string;",
		"\n\tlabel: string;",
		"\n\tvalue: string;",
		"\n\tplaceholder?: string;",
		"\n\tlabelClassName?: string;",
		"\n\tinputClassName?: string;",
		"\n\terrorMessageClassName?: string;",
		"\n\tisRequired?: boolean;",
		"\n\tisRequiredErrorMessage?: string;",
		"\n\tonChange: (fieldName: string, value: string, error: string | boolean) => void;",
		"\n\tvalidate?: (value: string) => boolean | string;",
		"\n}",
		"\n",
		"\ninterface ThisState {",
		"\n\tvalue: string;",
		"\n\thasError: boolean;",
		"\n\terrorMessage?: string;",
		"\n}",
		"\n",
		"\nexport default CCTextField;",
		"\n"
	]
}
