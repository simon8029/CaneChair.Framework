{
	"type": "Component",
	"placeholder": "___componentName___",
	"Surffix": "Details",
	"content": [
		"import * as ___componentName___Actions from '../Actions/___componentName___Action';",
		"\nimport I___componentName___Action from '../Actions/I___componentName___Action';",
		"\nimport CCTextField from 'CommonComponents/CCTextField';",
		"\nimport * as React from 'react';",
		"\nimport { connect } from 'react-redux';",
		"\nimport { RouteComponentProps, withRouter } from 'react-router-dom';",
		"\nimport { bindActionCreators, Dispatch } from 'redux';",
		"\nimport Store from 'Store';",
		"\nimport { ___componentName___ModelType } from '../Types/___componentName___ModelType';",
		"\nimport StoreStateType from 'StoreStateType';",
		"\nimport { v4 } from 'uuid';",
		"\n",
		"\nclass ___componentName___Detail extends React.Component<ThisPropsType, ThisStateType> {",
		"\n\tconstructor(props: StateToPropsType) {",
		"\n\t\tsuper(props as any);",
		"\n\t\tthis.state = {",
		"\n\t\t\t___componentName___Array: this.props.___componentName___Array,",
		"\n\t\t\tcurrent___componentName___: this.props.current___componentName___,",
		"\n\t\t\terrors: [],",
		"\n\t\t\tisFormSaving: false,",
		"\n\t\t\tisNew___componentName___: this.props.isNew___componentName___,",
		"\n\t\t\ttextFields: {",
		"\n\t\t\t\t___componentName___Description:",
		"\n\t\t\t\t\tthis.props.current___componentName___.___componentName___Description !== undefined",
		"\n\t\t\t\t\t\t? this.props.current___componentName___.___componentName___Description",
		"\n\t\t\t\t\t\t: '',",
		"\n\t\t\t\t___componentName___Name:",
		"\n\t\t\t\t\tthis.props.current___componentName___.___componentName___Name !== undefined",
		"\n\t\t\t\t\t\t? this.props.current___componentName___.___componentName___Name",
		"\n\t\t\t\t\t\t: '',",
		"\n\t\t\t\tid:",
		"\n\t\t\t\t\tthis.props.current___componentName___.id !== undefined",
		"\n\t\t\t\t\t\t? this.props.current___componentName___.id",
		"\n\t\t\t\t\t\t: ''",
		"\n\t\t\t},",
		"\n\t\t\ttextFieldsErrors: {}",
		"\n\t\t};",
		"\n\t}",
		"\n",
		"\n\tpublic render() {",
		"\n\t\treturn (",
		"\n\t\t\t<div className=\"container mt-3\">",
		"\n\t\t\t\t<form onSubmit={this.onFormSubmit}>",
		"\n\t\t\t\t\t<div id=\"\" className=\"\">",
		"\n\t\t\t\t\t\t<input",
		"\n\t\t\t\t\t\t\ttype=\"button\"",
		"\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-warning btn-sm\"",
		"\n\t\t\t\t\t\t\tonClick={() => {",
		"\n\t\t\t\t\t\t\t\tthis.props.history.push('/___componentName___s');",
		"\n\t\t\t\t\t\t\t}}",
		"\n\t\t\t\t\t\t\tvalue={'<= Go Back'}",
		"\n\t\t\t\t\t\t/>",
		"\n\t\t\t\t\t\t<input",
		"\n\t\t\t\t\t\t\ttype=\"submit\"",
		"\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-success btn-sm mx-1 float-right\"",
		"\n\t\t\t\t\t\t\tvalue={this.state.isNew___componentName___ ? 'Add' : 'Update'}",
		"\n\t\t\t\t\t\t/>",
		"\n\t\t\t\t\t</div>",
		"\n\t\t\t\t\t<h4 className=\"my-3\">___componentName___</h4>",
		"\n\t\t\t\t\t<div className=\"\">",
		"\n\t\t\t\t\t\t<div className=\"form-row\">",
		"\n\t\t\t\t\t\t\t<div className=\"col\">",
		"\n\t\t\t\t\t\t\t\t<CCTextField",
		"\n\t\t\t\t\t\t\t\t\tfieldName=\"id\"",
		"\n\t\t\t\t\t\t\t\t\tlabel=\"___componentName___ ID\"",
		"\n\t\t\t\t\t\t\t\t\tvalue={this.state.textFields.id}",
		"\n\t\t\t\t\t\t\t\t\tonChange={this.onTextFieldChange}",
		"\n\t\t\t\t\t\t\t\t/>",
		"\n\t\t\t\t\t\t\t</div>",
		"\n\t\t\t\t\t\t\t<div className=\"col\">",
		"\n\t\t\t\t\t\t\t\t<CCTextField",
		"\n\t\t\t\t\t\t\t\t\tfieldName=\"___componentName___Name\"",
		"\n\t\t\t\t\t\t\t\t\tlabel=\"___componentName___ Name\"",
		"\n\t\t\t\t\t\t\t\t\tvalue={this.state.textFields.___componentName___Name}",
		"\n\t\t\t\t\t\t\t\t\tisRequired={true}",
		"\n\t\t\t\t\t\t\t\t\tisRequiredErrorMessage=\"___componentName___ Name is required....\"",
		"\n\t\t\t\t\t\t\t\t\tonChange={this.onTextFieldChange}",
		"\n\t\t\t\t\t\t\t\t\tvalidate={(value) =>",
		"\n\t\t\t\t\t\t\t\t\t\tvalue.length > 2",
		"\n\t\t\t\t\t\t\t\t\t\t\t? false",
		"\n\t\t\t\t\t\t\t\t\t\t\t: '___componentName___ name cannot less than 3 letters.'",
		"\n\t\t\t\t\t\t\t\t\t}",
		"\n\t\t\t\t\t\t\t\t/>",
		"\n\t\t\t\t\t\t\t</div>",
		"\n\t\t\t\t\t\t\t<div className=\"col\">",
		"\n\t\t\t\t\t\t\t\t<CCTextField",
		"\n\t\t\t\t\t\t\t\t\tfieldName=\"___componentName___Description\"",
		"\n\t\t\t\t\t\t\t\t\tlabel=\"Description\"",
		"\n\t\t\t\t\t\t\t\t\tvalue={this.state.textFields.___componentName___Description}",
		"\n\t\t\t\t\t\t\t\t\tisRequired={false}",
		"\n\t\t\t\t\t\t\t\t\tisRequiredErrorMessage=\"\"",
		"\n\t\t\t\t\t\t\t\t\tonChange={this.onTextFieldChange}",
		"\n\t\t\t\t\t\t\t\t\tvalidate={(value) =>",
		"\n\t\t\t\t\t\t\t\t\t\tvalue.length < 300",
		"\n\t\t\t\t\t\t\t\t\t\t\t? false",
		"\n\t\t\t\t\t\t\t\t\t\t\t: 'Description should less than 300 characters.'",
		"\n\t\t\t\t\t\t\t\t\t}",
		"\n\t\t\t\t\t\t\t\t/>",
		"\n\t\t\t\t\t\t\t</div>",
		"\n\t\t\t\t\t\t</div>",
		"\n\t\t\t\t\t</div>",
		"\n\t\t\t\t</form>",
		"\n\t\t\t</div>",
		"\n\t\t);",
		"\n\t}",
		"\n",
		"\n\tpublic componentWillMount() {",
		"\n\t\t//",
		"\n\t}",
		"\n",
		"\n\tpublic componentDidMount() {",
		"\n\t\t// if the component is loaded through browser url instead of <Link>, reload all data",
		"\n\t\tif (this.state.___componentName___Array.length === 0) {",
		"\n\t\t\tStore.dispatch(___componentName___Actions.getAll___componentName___());",
		"\n\t\t}",
		"\n\t}",
		"\n",
		"\n\tpublic componentWillReceiveProps(nextProps: StateToPropsType) {",
		"\n\t\t// Set current selected ___componentName___ to state",
		"\n\t\tif (nextProps.current___componentName___ !== undefined) {",
		"\n\t\t\tthis.setState({",
		"\n\t\t\t\tcurrent___componentName___: { ...nextProps.current___componentName___ },",
		"\n\t\t\t\ttextFields: {",
		"\n\t\t\t\t\t___componentName___Description: nextProps.current___componentName___.___componentName___Description",
		"\n\t\t\t\t\t\t? nextProps.current___componentName___.___componentName___Description",
		"\n\t\t\t\t\t\t: '',",
		"\n\t\t\t\t\t___componentName___Name: nextProps.current___componentName___.___componentName___Name",
		"\n\t\t\t\t\t\t? nextProps.current___componentName___.___componentName___Name",
		"\n\t\t\t\t\t\t: '',",
		"\n\t\t\t\t\tid: nextProps.current___componentName___.id ? nextProps.current___componentName___.id : ''",
		"\n\t\t\t\t}",
		"\n\t\t\t});",
		"\n\t\t}",
		"\n\t\tthis.setState({ ___componentName___Array: nextProps.___componentName___Array });",
		"\n\t}",
		"\n",
		"\n\tpublic componentDidUpdate() {",
		"\n\t\t//",
		"\n\t}",
		"\n",
		"\n\tpublic onTextFieldChange = (",
		"\n\t\tfieldName: string,",
		"\n\t\tvalue: string,",
		"\n\t\terror: string | boolean",
		"\n\t) => {",
		"\n\t\tconst textFields = this.state.textFields;",
		"\n\t\tconst textFieldsErrors = this.state.textFieldsErrors;",
		"\n",
		"\n\t\ttextFields[fieldName] = value;",
		"\n\t\ttextFieldsErrors[fieldName] = error;",
		"\n",
		"\n\t\tthis.setState({ textFields, textFieldsErrors });",
		"\n\t};",
		"\n",
		"\n\tpublic onFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {",
		"\n\t\tevent.preventDefault();",
		"\n\t\tconst ___componentName___: ___componentName___ModelType = new ___componentName___ModelType();",
		"\n\t\t___componentName___.id = this.state.textFields.id ? this.state.textFields.id : v4();",
		"\n\t\t___componentName___.___componentName___Name = this.state.textFields.___componentName___Name;",
		"\n\t\t___componentName___.___componentName___Description = this.state.textFields.___componentName___Description;",
		"\n",
		"\n\t\tif (!this.isFormValid()) {",
		"\n\t\t\treturn;",
		"\n\t\t}",
		"\n",
		"\n\t\tthis.setState({ isFormSaving: true });",
		"\n",
		"\n\t\tif (this.state.isNew___componentName___) {",
		"\n\t\t\tthis.props.actions",
		"\n\t\t\t\t.add___componentName___(___componentName___)",
		"\n\t\t\t\t.then((res: any) => {",
		"\n\t\t\t\t\tthis.redirectTo___componentName___sComponent();",
		"\n\t\t\t\t})",
		"\n\t\t\t\t.catch((error: string) => {",
		"\n\t\t\t\t\tthis.catchError(error);",
		"\n\t\t\t\t});",
		"\n\t\t} else {",
		"\n\t\t\tthis.props.actions",
		"\n\t\t\t\t.update___componentName___(___componentName___)",
		"\n\t\t\t\t.then(() => {",
		"\n\t\t\t\t\tthis.redirectTo___componentName___sComponent();",
		"\n\t\t\t\t})",
		"\n\t\t\t\t.catch((error: string) => {",
		"\n\t\t\t\t\tthis.catchError(error);",
		"\n\t\t\t\t});",
		"\n\t\t}",
		"\n\t};",
		"\n",
		"\n\tpublic redirectTo___componentName___sComponent() {",
		"\n\t\tthis.setState({ isFormSaving: false });",
		"\n\t\tthis.props.history.push('/___componentName___s');",
		"\n\t}",
		"\n",
		"\n\tpublic catchError(error: string) {",
		"\n\t\tthis.setState({ isFormSaving: false });",
		"\n\t}",
		"\n",
		"\n\tpublic isFormValid() {",
		"\n\t\tconst textFields = this.state.textFields;",
		"\n\t\tconst textFieldsErrors = this.state.textFieldsErrors;",
		"\n\t\tconst errorMessages = Object.keys(textFieldsErrors).filter(",
		"\n\t\t\t(k) => textFieldsErrors[k]",
		"\n\t\t);",
		"\n",
		"\n\t\tif (!textFields.___componentName___Name) {",
		"\n\t\t\treturn false;",
		"\n\t\t}",
		"\n",
		"\n\t\tif (errorMessages.length) {",
		"\n\t\t\treturn false;",
		"\n\t\t}",
		"\n",
		"\n\t\treturn true;",
		"\n\t}",
		"\n}",
		"\n",
		"\nfunction get___componentName___ById(___componentName___s: ___componentName___ModelType[], ___componentName___Id: string) {",
		"\n\tconst ___componentName___ = ___componentName___s.filter(",
		"\n\t\t(s: ___componentName___ModelType) => s.id === ___componentName___Id",
		"\n\t);",
		"\n\tif (___componentName___) {",
		"\n\t\treturn ___componentName___[0];",
		"\n\t}",
		"\n\treturn new ___componentName___ModelType();",
		"\n}",
		"\n",
		"\nfunction mapStateToProps(",
		"\n\tstoreState: StoreStateType,",
		"\n\townProps: OwnProps",
		"\n): StateToPropsType {",
		"\n\tconst ___componentName___Id = ownProps.match.params.___componentName___Id;",
		"\n\tlet current___componentName___ = new ___componentName___ModelType();",
		"\n\tlet isNew___componentName___ = ___componentName___Id === undefined;",
		"\n",
		"\n\tif (___componentName___Id && storeState.___componentName___Module.___componentName___Array.length > 0) {",
		"\n\t\tcurrent___componentName___ = get___componentName___ById(",
		"\n\t\t\tstoreState.___componentName___Module.___componentName___Array,",
		"\n\t\t\t___componentName___Id",
		"\n\t\t);",
		"\n\t\tisNew___componentName___ = false;",
		"\n\t}",
		"\n",
		"\n\treturn {",
		"\n\t\t___componentName___Array: storeState.___componentName___Module.___componentName___Array,",
		"\n\t\tcurrent___componentName___,",
		"\n\t\tisNew___componentName___",
		"\n\t};",
		"\n}",
		"\n",
		"\nfunction mapDispatchToProps(",
		"\n\tdispatch: Dispatch<I___componentName___Action>",
		"\n): DispatchToPropsType {",
		"\n\treturn {",
		"\n\t\tactions: bindActionCreators(___componentName___Actions, dispatch)",
		"\n\t};",
		"\n}",
		"\n",
		"\ninterface ThisStateType {",
		"\n\t___componentName___Array: ___componentName___ModelType[];",
		"\n\tcurrent___componentName___: ___componentName___ModelType;",
		"\n\terrors: string[];",
		"\n\tisNew___componentName___: boolean;",
		"\n\tisFormSaving: boolean;",
		"\n\ttextFields: {",
		"\n\t\tid: string;",
		"\n\t\t___componentName___Name: string;",
		"\n\t\t___componentName___Description: string;",
		"\n\t};",
		"\n\ttextFieldsErrors: {};",
		"\n}",
		"\n",
		"\ninterface StateToPropsType {",
		"\n\t___componentName___Array: ___componentName___ModelType[];",
		"\n\tcurrent___componentName___: ___componentName___ModelType;",
		"\n\terrors?: object;",
		"\n\tisNew___componentName___: boolean;",
		"\n\tisFormSaving?: boolean;",
		"\n}",
		"\n",
		"\ninterface DispatchToPropsType {",
		"\n\tactions: typeof ___componentName___Actions;",
		"\n}",
		"\n",
		"\n// interface RCProps extends RouteComponentProps<{ ___componentName___Id: string }>;",
		"\n",
		"\ninterface OwnProps extends RouteComponentProps<{ ___componentName___Id: string }> {}",
		"\n",
		"\ninterface ThisPropsType",
		"\n\textends StateToPropsType,",
		"\n\t\tDispatchToPropsType,",
		"\n\t\tOwnProps {}",
		"\n",
		"\nexport default withRouter(",
		"\n\tconnect<StateToPropsType, DispatchToPropsType, OwnProps>(",
		"\n\t\tmapStateToProps,",
		"\n\t\tmapDispatchToProps",
		"\n\t)(___componentName___Detail)",
		"\n);"
	]
}
