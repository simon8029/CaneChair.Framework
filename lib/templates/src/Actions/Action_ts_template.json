{
	"type": "Action",
	"placeholder": "___componentName___",
	"content": [
		"import {",
		"\n\tIAdd___componentName___Failed,",
		"\n\tIAdd___componentName___Start,",
		"\n\tIAdd___componentName___Succeeded,",
		"\n\tI___componentName___Action,",
		"\n\tIDelete___componentName___Failed,",
		"\n\tIDelete___componentName___Start,",
		"\n\tIDelete___componentName___Succeeded,",
		"\n\tIGetAll___componentName___Failed,",
		"\n\tIGetAll___componentName___Start,",
		"\n\tIGetAll___componentName___Succeeded,",
		"\n\tIGet___componentName___ByIdFailed,",
		"\n\tIGet___componentName___ByIdStart,",
		"\n\tIGet___componentName___ByIdSucceeded,",
		"\n\tIUpdate___componentName___Failed,",
		"\n\tIUpdate___componentName___Start,",
		"\n\tIUpdate___componentName___Succeeded",
		"\n} from './I___componentName___Action';",
		"\nimport { Dispatch } from 'redux';",
		"\nimport * as ___componentName___ActionTypes from '../Types/___componentName___ActionType';",
		"\nimport ___componentName___Service from '../Services/___componentName___Service';",
		"\nimport { ___componentName___ModelType } from '../Types/___componentName___ModelType';",
		"\n",
		"\nexport function getAll___componentName___Start(): IGetAll___componentName___Start {",
		"\n\treturn {",
		"\n\t\ttype: ___componentName___ActionTypes.GetAll___componentName___Start",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function getAll___componentName___Succeeded(",
		"\n\t___componentName___Array: ___componentName___ModelType[]",
		"\n): IGetAll___componentName___Succeeded {",
		"\n\treturn {",
		"\n\t\t___componentName___Array,",
		"\n\t\ttype: ___componentName___ActionTypes.GetAll___componentName___Succeeded",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function getAll___componentName___Failed(error: Error): IGetAll___componentName___Failed {",
		"\n\treturn {",
		"\n\t\terror,",
		"\n\t\ttype: ___componentName___ActionTypes.GetAll___componentName___Failed",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function get___componentName___ByIdStart(): IGet___componentName___ByIdStart {",
		"\n\treturn {",
		"\n\t\ttype: ___componentName___ActionTypes.Get___componentName___ByIdStart",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function get___componentName___ByIdSucceeded(",
		"\n\t___componentName___: ___componentName___ModelType",
		"\n): IGet___componentName___ByIdSucceeded {",
		"\n\treturn {",
		"\n\t\t___componentName___,",
		"\n\t\ttype: ___componentName___ActionTypes.Get___componentName___ByIdSucceeded",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function get___componentName___ByIdFailed(error: Error): IGet___componentName___ByIdFailed {",
		"\n\treturn {",
		"\n\t\terror,",
		"\n\t\ttype: ___componentName___ActionTypes.Get___componentName___ByIdFailed",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function add___componentName___Start(): IAdd___componentName___Start {",
		"\n\treturn { type: ___componentName___ActionTypes.Add___componentName___Start };",
		"\n}",
		"\n",
		"\nexport function add___componentName___Succeeded(",
		"\n\t___componentName___: ___componentName___ModelType",
		"\n): IAdd___componentName___Succeeded {",
		"\n\treturn {",
		"\n\t\t___componentName___,",
		"\n\t\ttype: ___componentName___ActionTypes.Add___componentName___Succeeded",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function add___componentName___Failed(error: Error): IAdd___componentName___Failed {",
		"\n\treturn {",
		"\n\t\terror,",
		"\n\t\ttype: ___componentName___ActionTypes.Add___componentName___Failed",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function update___componentName___Start(): IUpdate___componentName___Start {",
		"\n\treturn { type: ___componentName___ActionTypes.Update___componentName___Start };",
		"\n}",
		"\n",
		"\nexport function update___componentName___Succeeded(",
		"\n\t___componentName___: ___componentName___ModelType",
		"\n): IUpdate___componentName___Succeeded {",
		"\n\treturn {",
		"\n\t\t___componentName___,",
		"\n\t\ttype: ___componentName___ActionTypes.Update___componentName___Succeeded",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function update___componentName___Failed(error: Error): IUpdate___componentName___Failed {",
		"\n\treturn {",
		"\n\t\terror,",
		"\n\t\ttype: ___componentName___ActionTypes.Update___componentName___Failed",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function delete___componentName___Start(): IDelete___componentName___Start {",
		"\n\treturn { type: ___componentName___ActionTypes.Delete___componentName___Start };",
		"\n}",
		"\n",
		"\nexport function delete___componentName___Succeeded(",
		"\n\t___componentName___: ___componentName___ModelType",
		"\n): IDelete___componentName___Succeeded {",
		"\n\treturn {",
		"\n\t\t___componentName___,",
		"\n\t\ttype: ___componentName___ActionTypes.Delete___componentName___Succeeded",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function delete___componentName___Failed(error: Error): IDelete___componentName___Failed {",
		"\n\treturn {",
		"\n\t\terror,",
		"\n\t\ttype: ___componentName___ActionTypes.Delete___componentName___Failed",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function getAll___componentName___() {",
		"\n\treturn (dispatch: Dispatch<I___componentName___Action>) => {",
		"\n\t\tdispatch(getAll___componentName___Start());",
		"\n\t\treturn ___componentName___Service.getAll___componentName___()",
		"\n\t\t\t.then((res: ___componentName___ModelType[]) => {",
		"\n\t\t\t\tdispatch(getAll___componentName___Succeeded(res));",
		"\n\t\t\t})",
		"\n\t\t\t.catch((error: Error) => {",
		"\n\t\t\t\tdispatch(getAll___componentName___Failed(error));",
		"\n\t\t\t\tthrow error;",
		"\n\t\t\t});",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function add___componentName___(___componentName___: ___componentName___ModelType): any {",
		"\n\treturn (dispatch: Dispatch<I___componentName___Action>) => {",
		"\n\t\tdispatch(add___componentName___Start());",
		"\n\t\treturn ___componentName___Service.add___componentName___(___componentName___)",
		"\n\t\t\t.then((res: ___componentName___ModelType) => {",
		"\n\t\t\t\tdispatch(add___componentName___Succeeded(res));",
		"\n\t\t\t})",
		"\n\t\t\t.catch((error: Error) => {",
		"\n\t\t\t\tdispatch(add___componentName___Failed(error));",
		"\n\t\t\t\tthrow error;",
		"\n\t\t\t});",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function update___componentName___(___componentName___: ___componentName___ModelType): any {",
		"\n\treturn (dispatch: Dispatch<I___componentName___Action>) => {",
		"\n\t\tdispatch(update___componentName___Start());",
		"\n\t\treturn ___componentName___Service.update___componentName___(___componentName___)",
		"\n\t\t\t.then((res: ___componentName___ModelType) => {",
		"\n\t\t\t\tdispatch(update___componentName___Succeeded(res));",
		"\n\t\t\t})",
		"\n\t\t\t.catch((error: Error) => {",
		"\n\t\t\t\tdispatch(update___componentName___Failed(error));",
		"\n\t\t\t\tthrow error;",
		"\n\t\t\t});",
		"\n\t};",
		"\n}",
		"\n",
		"\nexport function delete___componentName___(___componentName___: ___componentName___ModelType): any {",
		"\n\treturn (dispatch: Dispatch<I___componentName___Action>) => {",
		"\n\t\tdispatch(delete___componentName___Start());",
		"\n\t\treturn ___componentName___Service.delete___componentName___(___componentName___)",
		"\n\t\t\t.then(() => {",
		"\n\t\t\t\tdispatch(delete___componentName___Succeeded(___componentName___));",
		"\n\t\t\t})",
		"\n\t\t\t.catch((error: Error) => {",
		"\n\t\t\t\tdispatch(delete___componentName___Failed(error));",
		"\n\t\t\t\tthrow error;",
		"\n\t\t\t});",
		"\n\t};",
		"\n}",
		"\n"
	]
}
